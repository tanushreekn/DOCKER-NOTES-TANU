
ECR (Elastic Container Registry) is a fully-managed Docker container registry that makes it easy for developers to store, manage, 
and deploy Docker container images. Here are some real-world examples of how ECR is used in AWS:

// Create ECR in AWS.
   
Go to AWS console  
  
1. Create a registory in AWS
   ECR -> create Registry -> private -> give registory naem -> craete registory
   
2.  Create IAM Role with required policy and attach to EC2 Servers.

		# IAM Policiy to autheticate and pull & Push image.
		AmazonEC2ContainerRegistryFullAccess

		# IAM Policiy to autheticate and pull image.
		AmazonEC2ContainerRegistryReadOnly

	Note
	1.  Copy URI of the created registory 
		 registory URL/image_name
		       711472959942.dkr.ecr.ap-northeast-1.amazonaws.com/ecrimage
	2.  copy the topken under -Retrieve an authentication token and authenticate your Docker client to your registry. Use the AWS CLI:
		 ECR -> Registry ->registory name -> view push commands ->
		      aws ecr get-login-password --region ap-northeast-1 | docker login --username AWS --password-stdin 711472959942.dkr.ecr.ap-northeast-1.amazonaws.comt-1.amazonaws.com

3. follow the steps in docker console to push the image to ECR
    
	-> install aws cli 
	   $sudo apt install aws_cli
	-> configure aws
	   $sudo aws configure //pass only region 
	   $sudo aws ecr get-login-password --region ap-northeast-1 | docker login --username AWS --password-stdin 711472959942.dkr.ecr.ap-northeast-1.amazonaws.com
	   $docker images
	   $docker tag src_image:tag  registoryname/reponame:tag
	      ex- docker tag tomcat:9.0  711472959942.dkr.ecr.ap-northeast-1.amazonaws.com/ecrimage:1.0
	   $ sudo docker push registoryname/reponame:tag
	     sudo docker push 711472959942.dkr.ecr.ap-northeast-1.amazonaws.com/ecrimage:1.0
		 
		 like this you can tag and push as many nmber of images ,if  are pushing ro same repository it will store its versions with tag names attached
		 
		 docker tag tomcat:9.0  711472959942.dkr.ecr.ap-northeast-1.amazonaws.com/ecrimage:1.2
		 sudo docker push 711472959942.dkr.ecr.ap-northeast-1.amazonaws.com/ecrimage:1.2  
		  //Go and check under ECR in AWS
		 
		 
		 
		 
		 
//Clod watch is sed to view the application slogs which is runing in the server(EC2)


Step 1 - Create  a IAM role and attach a following policies and attach to server
         Go to IAM -> create role ->attach below policies -> create
		        CloudWatchFullAccess
				CloudWatchActionsEC2Access
				CloudWatchLogsFullAccess
		 Go to server -> action -> security -> manage IAM role -> attach role created
				
 step 2 Create/genarate a loggroup in the container and  for the appliactions using below commands and push it to AWs cloud watch
         - $ sudo apt update
		 - $ sudo apt inatall aws-cli -you
		 - $ aws configure  //pass only region 
		 - $ docker ps -a 
		 - $ sudo  docker run -it \
			--log-driver=awslogs \
			--log-opt awslogs-region=us-east-1 \
			--log-opt awslogs-group=myLogGroup \
			--log-opt awslogs-create-group=true \
			--name jenkins_container \
			-p 8099:8080 \
			jenkins/jenkins:lts
		    // now the logs are going to be genearted and stored in container and pushed to cloud watch
        
step 3 Go to cloud watch in AWS console and check the logs in logs stream 